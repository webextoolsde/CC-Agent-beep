import { AgentxService } from "@wxcc-desktop/sdk-types";
import { createJsApiLogger } from "./common/_logger";
declare type Listeners = {
    inited: () => void;
    cleaned: () => void;
};
declare type Events = keyof Listeners;
export declare class ConfigJsApi {
    private readonly emitter;
    private readonly logger;
    private agentxSERVICE?;
    private waitUntil;
    constructor(config: {
        logger: ReturnType<typeof createJsApiLogger>;
        SERVICE: AgentxService;
    });
    private checkService;
    private emit;
    init(): Promise<void>;
    cleanup(): void;
    get clientLocale(): string;
    addEventListener<T extends Events>(eventName: T, listener: Listeners[T]): void;
    removeEventListener<T extends Events>(eventName: T, listener: Listeners[T]): void;
}
export declare const createConfigJsApi: (SERVICE: AgentxService) => ConfigJsApi;
export {};
