import { InboundAiAssistantError, InboundRequestType } from "./MessageHandler";
interface ProcessParams {
    inboundRequestType: InboundRequestType;
    notificationLinkHandlerCallback?: () => void;
    notificationAcceptActionCallback?: () => void;
    notificationRejectActionCallback?: () => void;
    notificationDismissActionCallback?: () => void;
    notificationTimeoutCallback?: () => void;
    errorType?: InboundAiAssistantError;
    title?: string;
    message?: string;
}
declare class AiAssistantMessageProcessor {
    private aiSummaryNotifications;
    private wellnessBreakNotifications;
    private aiGenericNotifications;
    process(processParams: ProcessParams): void;
    private showWellnessBreakNotification;
    private removeWellnessBreakNotifications;
    private addAiSummaryNotification;
    private addAiGenericNotification;
    private showCallDropAiNotification;
    private showVirtualAgentSummaryNotification;
    private showGenericAiAssistantNotification;
    private removeAiSummaryNotifications;
    private removeAiGenericNotifications;
    private showWellnessBreakErrorNotification;
}
export default AiAssistantMessageProcessor;
