import { Err as UUIPErr } from "@uuip/unified-ui-platform-sdk";
import { AxiosError } from "axios";
import { HttpReqs } from "../../../core/http-reqs";
import { GetScheduleCallback, GetScheduleCallbackById, ScheduleCallbackResp, scheduleCallbackSubmittedFormData } from "./types";
declare class ScheduleCallback {
    private readonly httpApi;
    constructor(httpApi: HttpReqs);
    createErrDetailsObjectForScheduleCallback(errObj: AxiosError<any>, errorKey: any): UUIPErr.Details<any>;
    private getEndPoint;
    fetchByAssigneeAgentId(page: number, assigneeAgent: string, sortBy: string, sortOrder: string): Promise<GetScheduleCallback>;
    fetchByCallbackPhoneNumber(page: number, phoneNumber: string): Promise<GetScheduleCallback>;
    save(payload: scheduleCallbackSubmittedFormData): Promise<GetScheduleCallbackById | ScheduleCallbackResp>;
    updateCallBackDetails(updatedCallbackDetails: scheduleCallbackSubmittedFormData): Promise<GetScheduleCallbackById | ScheduleCallbackResp>;
    deleteScheduleCallback(id: string): Promise<{}>;
}
export default ScheduleCallback;
